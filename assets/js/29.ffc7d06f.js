(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{275:function(t,a,s){"use strict";s.r(a);var e=s(28),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#三种数据结构"}},[t._v("三种数据结构")]),s("ul",[s("li",[s("a",{attrs:{href:"#栈（stack）"}},[t._v("栈（Stack）")])]),s("li",[s("a",{attrs:{href:"#堆（heap）"}},[t._v("堆（Heap）")])]),s("li",[s("a",{attrs:{href:"#队列（queue）"}},[t._v("队列（Queue）")])])])]),s("li",[s("a",{attrs:{href:"#变量对象与数据类型"}},[t._v("变量对象与数据类型")]),s("ul",[s("li",[s("a",{attrs:{href:"#基础数据类型"}},[t._v("基础数据类型")])]),s("li",[s("a",{attrs:{href:"#引用数据类型"}},[t._v("引用数据类型")])])])]),s("li",[s("a",{attrs:{href:"#内存空间管理"}},[t._v("内存空间管理")]),s("ul",[s("li",[s("a",{attrs:{href:"#自动垃圾收集机制原理"}},[t._v("自动垃圾收集机制原理")])])])]),s("li",[s("a",{attrs:{href:"#工作流程："}},[t._v("工作流程：")]),s("ul",[s("li",[s("a",{attrs:{href:"#内存泄漏"}},[t._v("内存泄漏")])])])]),s("li",[s("a",{attrs:{href:"#参考文章"}},[t._v("参考文章")])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"三种数据结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三种数据结构"}},[t._v("#")]),t._v(" 三种数据结构")]),t._v(" "),s("h3",{attrs:{id:"栈（stack）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#栈（stack）"}},[t._v("#")]),t._v(" 栈（Stack）")]),t._v(" "),s("p",[t._v("栈数据结构的特点："),s("strong",[t._v("先进后出，后进先出（LIFO）。")])]),t._v(" "),s("p",[t._v("可以通过类比乒乓球盒子来理解栈的存取方式。\n"),s("img",{attrs:{src:"https://i.loli.net/2020/02/21/TQ8VMBLOWKCrDfz.png",alt:"栈数据结构"}})]),t._v(" "),s("p",[t._v("存取方式：处于盒子最顶层的乒乓球5，一定是最后被放进去的，但是可以最先被使用。而想要使用底层的乒乓球1，\n就必须要将上面的4个乒乓球取出来，让乒乓球1处于盒子顶层才行。")]),t._v(" "),s("h3",{attrs:{id:"堆（heap）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#堆（heap）"}},[t._v("#")]),t._v(" 堆（Heap）")]),t._v(" "),s("p",[t._v("堆数据结构的特点："),s("strong",[t._v("一种树状的结构且是无序（乱序）的。")])]),t._v(" "),s("p",[t._v("堆数据结构的存取数据方式：与书架与书非常的相似。当我们想要拿哪本书的时候只需要知道书的名字就可以在书架中找到那本书，\n而不用像从乒乓球盒子里取乒乓球一样，非得将上面的所有乒乓球拿出来才能取到中间的某一个乒乓球。就好比JSON格式的数据中，\n存储的 "),s("code",[t._v("key-value")]),t._v(" 是可以无序的，因为顺序的不同并不影响到使用。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://i.loli.net/2020/02/21/EdiF2uIRnCav8gM.png",alt:"堆数据结构"}})]),t._v(" "),s("h3",{attrs:{id:"队列（queue）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#队列（queue）"}},[t._v("#")]),t._v(" 队列（Queue）")]),t._v(" "),s("p",[t._v("队列数据结构的特点："),s("strong",[t._v("先进先出（FIFO）。")])]),t._v(" "),s("p",[t._v("如同排队过地铁安检一样，排在队伍前面的人一定是最先过安检的人。\n"),s("img",{attrs:{src:"https://i.loli.net/2020/02/21/i7ZpGejUwgX9zuF.png",alt:"队列数据结构"}})]),t._v(" "),s("h2",{attrs:{id:"变量对象与数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量对象与数据类型"}},[t._v("#")]),t._v(" 变量对象与数据类型")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("JavaScript")]),t._v("的执行上下文生成后会创建一个叫做 "),s("strong",[t._v("变量对象的特殊对象，"),s("code",[t._v("JavaScript")]),t._v("的基础数据类型往往都保存在变量对象中")]),t._v("。")])]),t._v(" "),s("h3",{attrs:{id:"基础数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础数据类型"}},[t._v("#")]),t._v(" 基础数据类型")]),t._v(" "),s("p",[t._v("基础数据类型共有6种："),s("code",[t._v("Number")]),t._v("、"),s("code",[t._v("Boolean")]),t._v("、"),s("code",[t._v("String")]),t._v("、"),s("code",[t._v("Null")]),t._v("、"),s("code",[t._v("Undefined")]),t._v("、"),s("code",[t._v("Symbol")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("基本数据类型的特点：")])]),t._v(" "),s("ul",[s("li",[t._v("基本数据类型的值是按值访问的。")]),t._v(" "),s("li",[t._v("基本数据类型的值是不可变。")]),t._v(" "),s("li",[t._v("基本数据类型的比较是它们的值的比较。")]),t._v(" "),s("li",[t._v("基本数据类型的变量是存放在栈内存（Stack）中的。栈内存中包括了变量的标识符和变量的值。")])]),t._v(" "),s("h4",{attrs:{id:"聊一聊基本数据类型的值为什么是不可变的？-todo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#聊一聊基本数据类型的值为什么是不可变的？-todo"}},[t._v("#")]),t._v(" 聊一聊基本数据类型的值为什么是不可变的？// todo")]),t._v(" "),s("p",[t._v("上面有说到基础数据类型有一个特点就是："),s("strong",[t._v("基本数据类型的值是不可变。")]),t._v(" 其实一直不太理解这句话的意思，为什么说值是不可变的呢？\n"),s("code",[t._v("let a = 100; a = 120")]),t._v(",这样变量a的值不就变了嘛？")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'呵呵'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'嘻嘻'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 呵呵")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://i.loli.net/2020/02/21/mXU679tTdSOoG5r.png",alt:""}}),t._v("\n为啥说它是不可变的呢？")]),t._v(" "),s("h3",{attrs:{id:"引用数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引用数据类型"}},[t._v("#")]),t._v(" 引用数据类型")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("JavaScript")]),t._v("不允许直接访问内存中的位置，即不能直接操作对象的内存空间（堆内存）。我们实际操作的是对象的引用。\n引用类型的存储需要内存的栈区和堆区（堆区是指内存里的堆内存）共同完成，栈区内存保存变量标识符和指向堆内存中该对象的指针（即该对象在堆内存的地址）。")])]),t._v(" "),s("p",[t._v("引用数据类型有一种："),s("code",[t._v("Object")]),t._v("。细分的话有："),s("code",[t._v("Object")]),t._v("、"),s("code",[t._v("Array")]),t._v("、"),s("code",[t._v("Date")]),t._v("、"),s("code",[t._v("RegExp")]),t._v("、"),s("code",[t._v("Function")]),t._v("等等。")]),t._v(" "),s("p",[s("strong",[t._v("引用数据类型的特点：")])]),t._v(" "),s("ul",[s("li",[t._v("引用数据类型的值是按引用访问的。")]),t._v(" "),s("li",[t._v("引用数据类型的值是可变的。")]),t._v(" "),s("li",[t._v("引用数据类型的比较是引用的比较。")]),t._v(" "),s("li",[t._v("引用数据类型的值是保存在堆内存中的对象。")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 引用数据类型间的比较是引用的比较（就是比较两个对象的堆内存中的地址是否相同）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\narr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" arr1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\narr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" arr1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[s("strong",[t._v("因为"),s("code",[t._v("arr")]),t._v("和"),s("code",[t._v("arr1")]),t._v("分别引用的是存放在堆内存中的2个不同的对象，所以变量"),s("code",[t._v("arr")]),t._v("和"),s("code",[t._v("arr1")]),t._v("的值（引用地址）是不一样！")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" people "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zj'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" people"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yh'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\npeople"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\npeople"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// yh")]),t._v("\na"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 26")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://i.loli.net/2020/02/21/C83iUVRkXpOyrA6.png",alt:"引用数据类型"}})]),t._v(" "),s("p",[t._v("解释："),s("strong",[t._v("栈内存中保存了变量标识符和指向堆内存中该对象的指针，而堆内存中保存了对象的真正内容。")]),t._v(" 当执行代码"),s("code",[t._v("const a = people")]),t._v("时，\n其实就是将变量的a指向（地址指针）也一同指向了堆中变量people所对应的对象的值。所以当随便改变变量a或者变量people的时，其实本质都是修改了堆内存该对象的值。")]),t._v(" "),s("h2",{attrs:{id:"内存空间管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存空间管理"}},[t._v("#")]),t._v(" 内存空间管理")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("JavaScript")]),t._v("具有自动垃圾回收机制，会定期对那些不再使用的变量、对象所占用的内容进行释放。")])]),t._v(" "),s("h3",{attrs:{id:"自动垃圾收集机制原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自动垃圾收集机制原理"}},[t._v("#")]),t._v(" 自动垃圾收集机制原理")]),t._v(" "),s("blockquote",[s("p",[t._v("目前各大浏览器通常采用的垃圾回收有两种方法：标记清除和引用计数。"),s("strong",[t._v("JS 中最常见的垃圾回收方式是标记清除。")])])]),t._v(" "),s("p",[t._v("工作原理："),s("strong",[t._v('当变量进入环境时，将此变量标记为"进入环境"。当变量离开环境时，则将其标记为"离开环境。"当被标记为"离开环境"时就会被回收内存。')])]),t._v(" "),s("h2",{attrs:{id:"工作流程："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#工作流程："}},[t._v("#")]),t._v(" 工作流程：")]),t._v(" "),s("h3",{attrs:{id:"内存泄漏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存泄漏"}},[t._v("#")]),t._v(" 内存泄漏")]),t._v(" "),s("h2",{attrs:{id:"参考文章"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/28103945",target:"_blank",rel:"noopener noreferrer"}},[t._v("js基本类型与引用类型的区别"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://segmentfault.com/a/1190000006752076",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 深入了解基本类型和引用类型的值"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=r.exports}}]);