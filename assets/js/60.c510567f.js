(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{317:function(a,e,r){"use strict";r.r(e);var t=r(28),l=Object(t.a)({},(function(){var a=this,e=a.$createElement,r=a._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h2",{attrs:{id:"什么是loader"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么是loader"}},[a._v("#")]),a._v(" 什么是loader")]),a._v(" "),r("p",[a._v("loader是文件加载器，能够加载资源文件，并对这些文件进行一些处理，诸如：编译、压缩等。最终一起打包到指定的文件中。")]),a._v(" "),r("ul",[r("li",[a._v("处理一个文件可以使用多个loader，loader的执行顺序和配置中的顺序是相反的，即最后一个loader最先执行，第一个loader最后执行；")]),a._v(" "),r("li",[a._v("第一个执行的loader接收源文件内容作为参数，其他loader接收前一个执行的loader的返回值作为参数，最后执行的loader会返回此模块的JS源码")])]),a._v(" "),r("h2",{attrs:{id:"什么是plugin"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么是plugin"}},[a._v("#")]),a._v(" 什么是plugin")]),a._v(" "),r("p",[a._v("在webpack运行的生命周期中会广播出许多事件，plugin可以监听这些事件，在合适的时机通过webpack提供的API改变输出结果。")]),a._v(" "),r("h2",{attrs:{id:"loader和plugin的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#loader和plugin的区别"}},[a._v("#")]),a._v(" loader和plugin的区别")]),a._v(" "),r("p",[r("strong",[a._v("对于loader，它是一个转换器，将A文件进行编译形成B文件，这里操作的是文件。如将 A.scss 转换为 A.css，单纯的文件转换过程。")])]),a._v(" "),r("p",[r("strong",[a._v("plugin 是一个扩展器，它丰富了webpack本身，针对是loader结束后，webpack打包的整个过程，它并不只对接操作文件，而是基于事件机制工作，会监听webpack打包过程中的某些节点，执行广泛的任务。")])]),a._v(" "),r("h2",{attrs:{id:"参考文章"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[a._v("#")]),a._v(" 参考文章")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/308",target:"_blank",rel:"noopener noreferrer"}},[a._v("webpack中loader和plugin的区别"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=l.exports}}]);