(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{204:function(s,n,a){"use strict";a.r(n);var e=a(28),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"块级作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#块级作用域"}},[s._v("#")]),s._v(" 块级作用域")]),s._v(" "),a("ul",[a("li",[s._v("函数内部")]),s._v(" "),a("li",[s._v("块中(字符 { 和 } 之间的区域)")])]),s._v(" "),a("h2",{attrs:{id:"let和const"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#let和const"}},[s._v("#")]),s._v(" let和const")]),s._v(" "),a("blockquote",[a("p",[a("strong",[s._v("块级声明用于声明在指定块的作用域之外无法访问的变量。")])])]),s._v(" "),a("h3",{attrs:{id:"不会被提升"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不会被提升"}},[s._v("#")]),s._v(" 不会被提升")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("if (false) {\n    let value = 1;\n}\nconsole.log(value); // Uncaught ReferenceError: value is not defined\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"重复声明报错"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重复声明报错"}},[s._v("#")]),s._v(" 重复声明报错")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var value = 1;\nlet value = 2; // Uncaught SyntaxError: Identifier 'value' has already been declared\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"不绑定全局作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不绑定全局作用域"}},[s._v("#")]),s._v(" 不绑定全局作用域")]),s._v(" "),a("blockquote",[a("p",[s._v("当在全局作用域中使用 "),a("code",[s._v("var")]),s._v(" 声明的时候，会创建一个新的全局变量作为全局对象的属性。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var value = 1\nconsole.log(window.value); // 1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("strong",[a("code",[s._v("let")]),s._v(" 和 "),a("code",[s._v("const")]),s._v(" 不会：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let value = 1;\nconsole.log(window.value); // undefined\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"let-与-const-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#let-与-const-的区别"}},[s._v("#")]),s._v(" let 与 const 的区别")]),s._v(" "),a("p",[a("code",[s._v("const")]),s._v(" 用于声明常量，其值一旦被设定不能被修改，否则会报错。"),a("strong",[a("code",[s._v("const")]),s._v(" 声明不允许修改绑定，但允许修改值。意味着当用 "),a("code",[s._v("const")]),s._v(" 声明对象时：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const data = {\n    value: 1\n}\n\n// 没有问题\ndata.value = 2;\ndata.num = 3;\n\n// 报错\ndata = {}; // Uncaught TypeError: Assignment to constant variable.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h2",{attrs:{id:"临时死区-temporal-dead-zone"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#临时死区-temporal-dead-zone"}},[s._v("#")]),s._v(" 临时死区(Temporal Dead Zone)")]),s._v(" "),a("blockquote",[a("p",[a("strong",[a("code",[s._v("let")]),s._v(" 和 "),a("code",[s._v("const")]),s._v(" 声明的变量不会被提升到作用域顶部，如果在声明之前访问这些变量，会导致报错。")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("console.log(typeof value); // Uncaught ReferenceError: value is not defined\nlet value = 1;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("strong",[s._v("因为 JS引擎在扫描代码发现变量声明时，要么将它们提升到作用域顶部（遇到 "),a("code",[s._v("var")]),s._v(" 声明），要么将声明放在 TDZ 中（遇到 "),a("code",[s._v("let")]),s._v(" 和 "),a("code",[s._v("const")]),s._v(" 声明）。访问TDZ中的变量会触发运行时错误。只有执行过变量声明语句后，变量才从TDZ中移出，然后方可访问。")])]),s._v(" "),a("h2",{attrs:{id:"循环中的块级作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#循环中的块级作用域"}},[s._v("#")]),s._v(" 循环中的块级作用域")]),s._v(" "),a("p",[s._v("一道面试题：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var funcs = [];\nfor (var i = 0; i < 3; i++) {\n    funcs[i] = function () {\n        console.log(i);\n    };\n}\nfuncs[0](); // 3`\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("法一：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var funcs = [];\nfor (var i = 0; i < 3; i++) {\n    funcs[i] = (function(i) {\n        console.log('i：', i);\n        return function () {\n            console.log(i);\n        }\n    })(i);\n}\nfuncs[0](); // 3\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("法二：通过 "),a("code",[s._v("let")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var funcs = [];\nfor (let i = 0; i < 3; i++) {\n    funcs[i] = function () {\n        console.log(i);\n    };\n}\nfuncs[0](); // 0\nfuncs[1](); // 1\nfuncs[2](); // 2\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h3",{attrs:{id:"分析-let-是如何做到的？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分析-let-是如何做到的？"}},[s._v("#")]),s._v(" 分析 "),a("code",[s._v("let")]),s._v(" 是如何做到的？")]),s._v(" "),a("p",[a("strong",[s._v("在 "),a("code",[s._v("for(let i=0; i<3; i++)")]),s._v(" 中，即圆括号之内建立一个隐藏的作用域。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("for (let i = 0; i < 3; i++) {\n  let i = 'abc';\n  console.log(i);\n}\n// abc\n// abc\n// abc\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[a("strong",[s._v("每次迭代循环时都创建一个新变量，并以之前迭代中同名变量的值将其初始化。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var funcs = [];\nfor (let i = 0; i < 3; i++) {\n    funcs[i] = function () {\n        console.log(i);\n    };\n}\nfuncs[0](); // 0\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("相当于：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 伪代码\n(let i=0) {\n    funcs[0] = function() {\n        console.log(i)\n    }\n}\n\n(let i=1) {\n    funcs[1] = function() {\n        console.log(i)\n    }\n}\n\n(let i=2) {\n    funcs[2] = function() {\n        console.log(i)\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("p",[s._v("当执行函数的时候，根据词法作用域就可以找到正确的值，可理解为**"),a("code",[s._v("let")]),s._v(" 声明模仿了闭包的做法来简化循环过程。**")]),s._v(" "),a("h2",{attrs:{id:"循环中的-let-和-const"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#循环中的-let-和-const"}},[s._v("#")]),s._v(" 循环中的 let 和 const")]),s._v(" "),a("p",[s._v("将 "),a("code",[s._v("let")]),s._v(" 改为 "),a("code",[s._v("const")]),s._v("呢？")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 报错，虽然每次都创建了一个新的变量，但是在迭代中尝试修改 const 的值，所以最终会报错。\nvar funcs = [];\nfor (const i = 0; i < 10; i++) {\n    funcs[i] = function () {\n        console.log(i);\n    };\n}\nfuncs[0](); // Uncaught TypeError: Assignment to constant variable.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h2",{attrs:{id:"babel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel"}},[s._v("#")]),s._v(" Babel")]),s._v(" "),a("blockquote",[a("p",[s._v("在 Babel 中是如何编译 let 和 const 的呢？")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("if (false) {\n    let value = 1;\n}\nconsole.log(value); // Uncaught ReferenceError: value is not defined\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[a("strong",[s._v("Babel 编译")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("if (false) {\n    var _value = 1;\n}\nconsole.log(value); // Uncaught ReferenceError: value is not defined\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("循环中的 "),a("code",[s._v("let")]),s._v(" 声明：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var funcs = [];\nfor (let i = 0; i < 10; i++) {\n    funcs[i] = function () {\n        console.log(i);\n    };\n}\nfuncs[0](); // 0\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[a("strong",[s._v("Babel 编译为：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var funcs = [];\n\nvar loop = function(i) {\n    funcs[i] = function(){\n        console.log(i);\n    }\n}\n\nfor (var i = 0; i < 10; i++) {\n    loop(i);\n}\nfuncs[0](); // 0\nfuncs[1](); // 1\nfuncs[2](); // 2\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);